{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  setLoading(true);\n  const formData = {\n    subject: subjectClassName,\n    topics: topicOfExam,\n    learning_goals: learningGoals,\n    date: testDate,\n    number: availableStudySessions,\n    length: workTimePerSession\n  };\n  try {\n    const response = await fetch('/materials', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    if (response.ok) {\n      const data = await response.json();\n      const studyGuideContent = data[\"Study Guide\"];\n      const studyPlannerContent = data[\"Study Planner\"];\n\n      // Save the study guide information in localStorage\n      const studyGuides = JSON.parse(localStorage.getItem('studyGuides')) || [];\n      const newGuide = {\n        subject: subjectClassName,\n        date: new Date().toLocaleDateString(),\n        studyGuide: studyGuideContent,\n        studyPlanner: studyPlannerContent\n      };\n      studyGuides.push(newGuide);\n      localStorage.setItem('studyGuides', JSON.stringify(studyGuides));\n      navigate('/submission-review', {\n        state: {\n          formData,\n          studyGuide: studyGuideContent,\n          studyPlanner: studyPlannerContent\n        }\n      });\n    } else {\n      console.error('Failed to create study guide');\n    }\n  } catch (error) {\n    console.error('Error:', error);\n  } finally {\n    setLoading(false);\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","setLoading","formData","subject","subjectClassName","topics","topicOfExam","learning_goals","learningGoals","date","testDate","number","availableStudySessions","length","workTimePerSession","response","fetch","method","headers","body","JSON","stringify","ok","data","json","studyGuideContent","studyPlannerContent","studyGuides","parse","localStorage","getItem","newGuide","Date","toLocaleDateString","studyGuide","studyPlanner","push","setItem","navigate","state","console","error"],"sources":["/workspaces/Learnt/learnt-front-end/src/components/Form.js"],"sourcesContent":["const handleSubmit = async (e) => {\n  e.preventDefault();\n  setLoading(true);\n  const formData = {\n    subject: subjectClassName,\n    topics: topicOfExam,\n    learning_goals: learningGoals,\n    date: testDate,\n    number: availableStudySessions,\n    length: workTimePerSession,\n  };\n\n  try {\n    const response = await fetch('/materials', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(formData),\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      const studyGuideContent = data[\"Study Guide\"];\n      const studyPlannerContent = data[\"Study Planner\"];\n\n      // Save the study guide information in localStorage\n      const studyGuides = JSON.parse(localStorage.getItem('studyGuides')) || [];\n      const newGuide = {\n        subject: subjectClassName,\n        date: new Date().toLocaleDateString(),\n        studyGuide: studyGuideContent,\n        studyPlanner: studyPlannerContent,\n      };\n      studyGuides.push(newGuide);\n      localStorage.setItem('studyGuides', JSON.stringify(studyGuides));\n\n      navigate('/submission-review', {\n        state: {\n          formData,\n          studyGuide: studyGuideContent,\n          studyPlanner: studyPlannerContent,\n        },\n      });\n    } else {\n      console.error('Failed to create study guide');\n    }\n  } catch (error) {\n    console.error('Error:', error);\n  } finally {\n    setLoading(false);\n  }\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClBC,UAAU,CAAC,IAAI,CAAC;EAChB,MAAMC,QAAQ,GAAG;IACfC,OAAO,EAAEC,gBAAgB;IACzBC,MAAM,EAAEC,WAAW;IACnBC,cAAc,EAAEC,aAAa;IAC7BC,IAAI,EAAEC,QAAQ;IACdC,MAAM,EAAEC,sBAAsB;IAC9BC,MAAM,EAAEC;EACV,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACnB,QAAQ;IAC/B,CAAC,CAAC;IAEF,IAAIa,QAAQ,CAACO,EAAE,EAAE;MACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,MAAMC,iBAAiB,GAAGF,IAAI,CAAC,aAAa,CAAC;MAC7C,MAAMG,mBAAmB,GAAGH,IAAI,CAAC,eAAe,CAAC;;MAEjD;MACA,MAAMI,WAAW,GAAGP,IAAI,CAACQ,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,EAAE;MACzE,MAAMC,QAAQ,GAAG;QACf5B,OAAO,EAAEC,gBAAgB;QACzBK,IAAI,EAAE,IAAIuB,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;QACrCC,UAAU,EAAET,iBAAiB;QAC7BU,YAAY,EAAET;MAChB,CAAC;MACDC,WAAW,CAACS,IAAI,CAACL,QAAQ,CAAC;MAC1BF,YAAY,CAACQ,OAAO,CAAC,aAAa,EAAEjB,IAAI,CAACC,SAAS,CAACM,WAAW,CAAC,CAAC;MAEhEW,QAAQ,CAAC,oBAAoB,EAAE;QAC7BC,KAAK,EAAE;UACLrC,QAAQ;UACRgC,UAAU,EAAET,iBAAiB;UAC7BU,YAAY,EAAET;QAChB;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACLc,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;IAC/C;EACF,CAAC,CAAC,OAAOA,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAChC,CAAC,SAAS;IACRxC,UAAU,CAAC,KAAK,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}