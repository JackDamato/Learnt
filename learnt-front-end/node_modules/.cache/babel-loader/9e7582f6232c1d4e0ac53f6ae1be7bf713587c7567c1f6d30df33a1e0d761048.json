{"ast":null,"code":"var _jsxFileName = \"/workspaces/Learnt/learnt-front-end/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for navigation\n\nimport '../styles/Dashboard.css';\nimport ProgressWheel from './ProgressWheel';\n// import ToDoList from './ToDoList';\n// import SubjectCards from './SubjectCards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  // const [tasks, setTasks] = useState([\n  //   { id: 1, text: 'Study Chapter 1', completed: false },\n  //   { id: 2, text: 'Complete Assignment 2', completed: false },\n  //   { id: 3, text: 'Revise Notes', completed: false },\n  //   { id: 4, text: 'Practice Problems', completed: false },\n  //   { id: 5, text: 'Group Study Session', completed: false },\n  // ]);\n\n  const navigate = useNavigate(); // Create a navigate function\n\n  // const handleTaskChange = (updatedTasks) => {\n  //   setTasks(updatedTasks);\n  // };\n\n  const handleAddSubjectClick = () => {\n    navigate('/form'); // Navigate directly to the form page\n  };\n\n  // const completedTasks = tasks.filter(task => task.completed).length;\n  // const totalTasks = tasks.length;\n  const progressPercentage = 5 / 8 * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-section\",\n      children: /*#__PURE__*/_jsxDEV(ProgressWheel, {\n        percentage: progressPercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subject-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-subject-button\",\n          onClick: handleAddSubjectClick,\n          children: \"Create Study Guide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useNavigate","ProgressWheel","jsxDEV","_jsxDEV","Dashboard","_s","navigate","handleAddSubjectClick","progressPercentage","className","children","percentage","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/workspaces/Learnt/learnt-front-end/src/components/Dashboard.js"],"sourcesContent":["// import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for navigation\n\nimport '../styles/Dashboard.css';\nimport ProgressWheel from './ProgressWheel';\n// import ToDoList from './ToDoList';\n// import SubjectCards from './SubjectCards';\n\nfunction Dashboard() {\n  // const [tasks, setTasks] = useState([\n  //   { id: 1, text: 'Study Chapter 1', completed: false },\n  //   { id: 2, text: 'Complete Assignment 2', completed: false },\n  //   { id: 3, text: 'Revise Notes', completed: false },\n  //   { id: 4, text: 'Practice Problems', completed: false },\n  //   { id: 5, text: 'Group Study Session', completed: false },\n  // ]);\n\n  const navigate = useNavigate(); // Create a navigate function\n\n  // const handleTaskChange = (updatedTasks) => {\n  //   setTasks(updatedTasks);\n  // };\n\n  const handleAddSubjectClick = () => {\n    navigate('/form'); // Navigate directly to the form page\n  };\n\n\n  // const completedTasks = tasks.filter(task => task.completed).length;\n  // const totalTasks = tasks.length;\n  const progressPercentage = (5 / 8) * 100;\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"progress-section\">\n        <ProgressWheel percentage={progressPercentage} />\n      </div>\n      {/* <div className=\"todo-section\">\n        <ToDoList tasks={tasks} setTasks={handleTaskChange} />\n      </div> */}\n      <div className=\"subject-section\">\n        {/* Directly navigate to form on button click */}\n        <div className='button-wrapper'>\n          <button className='add-subject-button' onClick={handleAddSubjectClick}>Create Study Guide</button>\n        </div>\n        {/* <div className='cards-wrapper'>\n          <SubjectCards />\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";;AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB,CAAC,CAAC;;AAEhD,OAAO,yBAAyB;AAChC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA;EACA;;EAEA,MAAMO,qBAAqB,GAAGA,CAAA,KAAM;IAClCD,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACrB,CAAC;;EAGD;EACA;EACA,MAAME,kBAAkB,GAAI,CAAC,GAAG,CAAC,GAAI,GAAG;EAExC,oBACEL,OAAA;IAAKM,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBP,OAAA;MAAKM,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BP,OAAA,CAACF,aAAa;QAACU,UAAU,EAAEH;MAAmB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eAINZ,OAAA;MAAKM,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAE9BP,OAAA;QAAKM,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC7BP,OAAA;UAAQM,SAAS,EAAC,oBAAoB;UAACO,OAAO,EAAET,qBAAsB;UAAAG,QAAA,EAAC;QAAkB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/F;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACV,EAAA,CA3CQD,SAAS;EAAA,QASCJ,WAAW;AAAA;AAAAiB,EAAA,GATrBb,SAAS;AA6ClB,eAAeA,SAAS;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}