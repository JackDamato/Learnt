{"ast":null,"code":"var _jsxFileName = \"/workspaces/Learnt/learnt-front-end/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SubjectCards from './SubjectCards';\nimport TodoList from './ToDoList';\nimport ProgressWheel from './ProgressWheel';\nimport '../styles/Dashboard.css'; // Ensure this file is updated with styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst subjects = [{\n  id: 1,\n  title: 'Mathematics',\n  color: '#FF5733'\n}, {\n  id: 2,\n  title: 'Science',\n  color: '#33FF57'\n}, {\n  id: 3,\n  title: 'History',\n  color: '#3357FF'\n}];\nconst initialTodoLists = {\n  1: [{\n    text: 'Complete Chapter 1',\n    completed: false\n  }],\n  2: [{\n    text: 'Read Article on Quantum Physics',\n    completed: false\n  }],\n  3: [{\n    text: 'Research World War II',\n    completed: false\n  }]\n};\nfunction Dashboard({\n  user\n}) {\n  _s();\n  const [activeSubject, setActiveSubject] = useState(subjects[0]);\n  const [todoLists, setTodoLists] = useState(initialTodoLists);\n  const toggleTodo = (subjectId, index) => {\n    setTodoLists(prevLists => {\n      const updatedTodos = [...prevLists[subjectId]];\n      updatedTodos[index].completed = !updatedTodos[index].completed; // Toggle completion status\n      return {\n        ...prevLists,\n        [subjectId]: updatedTodos\n      };\n    });\n  };\n  const getTotalProgress = () => {\n    const totalCompleted = Object.values(todoLists).reduce((acc, list) => {\n      return acc + list.filter(todo => todo.completed).length;\n    }, 0);\n    const totalItems = Object.values(todoLists).reduce((acc, list) => acc + list.length, 0);\n    return totalItems ? totalCompleted / totalItems * 100 : 0;\n  };\n  const getSubjectProgress = subjectId => {\n    const completed = todoLists[subjectId].filter(todo => todo.completed).length;\n    const total = todoLists[subjectId].length;\n    return total ? completed / total * 100 : 0;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Overall Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressWheel, {\n        progress: getTotalProgress()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [activeSubject.title, \" To-Do List\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todoLists[activeSubject.id],\n        onToggle: index => toggleTodo(activeSubject.id, index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [activeSubject.title, \" Progress\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n        progress: getSubjectProgress(activeSubject.id),\n        color: activeSubject.color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subject-cards-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select a Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubjectCards, {\n        subjects: subjects,\n        onSubjectSelect: setActiveSubject,\n        selectedSubject: activeSubject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"ymm9BZRanFvIf/umbcPe9hbGT7I=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","SubjectCards","TodoList","ProgressWheel","jsxDEV","_jsxDEV","subjects","id","title","color","initialTodoLists","text","completed","Dashboard","user","_s","activeSubject","setActiveSubject","todoLists","setTodoLists","toggleTodo","subjectId","index","prevLists","updatedTodos","getTotalProgress","totalCompleted","Object","values","reduce","acc","list","filter","todo","length","totalItems","getSubjectProgress","total","className","children","fileName","_jsxFileName","lineNumber","columnNumber","progress","todos","onToggle","CircularProgress","onSubjectSelect","selectedSubject","_c","$RefreshReg$"],"sources":["/workspaces/Learnt/learnt-front-end/src/components/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SubjectCards from './SubjectCards';\nimport TodoList from './ToDoList';\nimport ProgressWheel from './ProgressWheel';\nimport '../styles/Dashboard.css'; // Ensure this file is updated with styles\n\nconst subjects = [\n  { id: 1, title: 'Mathematics', color: '#FF5733' },\n  { id: 2, title: 'Science', color: '#33FF57' },\n  { id: 3, title: 'History', color: '#3357FF' },\n];\n\nconst initialTodoLists = {\n  1: [{ text: 'Complete Chapter 1', completed: false }],\n  2: [{ text: 'Read Article on Quantum Physics', completed: false }],\n  3: [{ text: 'Research World War II', completed: false }],\n};\n\nfunction Dashboard({ user }) {\n  const [activeSubject, setActiveSubject] = useState(subjects[0]);\n  const [todoLists, setTodoLists] = useState(initialTodoLists);\n\n  const toggleTodo = (subjectId, index) => {\n    setTodoLists((prevLists) => {\n      const updatedTodos = [...prevLists[subjectId]];\n      updatedTodos[index].completed = !updatedTodos[index].completed; // Toggle completion status\n      return { ...prevLists, [subjectId]: updatedTodos };\n    });\n  };\n\n  const getTotalProgress = () => {\n    const totalCompleted = Object.values(todoLists).reduce((acc, list) => {\n      return acc + list.filter(todo => todo.completed).length;\n    }, 0);\n    const totalItems = Object.values(todoLists).reduce((acc, list) => acc + list.length, 0);\n    return totalItems ? (totalCompleted / totalItems) * 100 : 0;\n  };\n\n  const getSubjectProgress = (subjectId) => {\n    const completed = todoLists[subjectId].filter(todo => todo.completed).length;\n    const total = todoLists[subjectId].length;\n    return total ? (completed / total) * 100 : 0;\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"progress-section\">\n        <h2>Overall Progress</h2>\n        <ProgressWheel progress={getTotalProgress()} />\n      </div>\n      <div className=\"todo-section\">\n        <h2>{activeSubject.title} To-Do List</h2>\n        <TodoList\n          todos={todoLists[activeSubject.id]}\n          onToggle={(index) => toggleTodo(activeSubject.id, index)}\n        />\n        <h3>{activeSubject.title} Progress</h3>\n        <CircularProgress progress={getSubjectProgress(activeSubject.id)} color={activeSubject.color} />\n      </div>\n      <div className=\"subject-cards-section\">\n        <h2>Select a Subject</h2>\n        <SubjectCards\n          subjects={subjects}\n          onSubjectSelect={setActiveSubject}\n          selectedSubject={activeSubject}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAG,CACf;EAAEC,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAU,CAAC,EACjD;EAAEF,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,EAC7C;EAAEF,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,CAC9C;AAED,MAAMC,gBAAgB,GAAG;EACvB,CAAC,EAAE,CAAC;IAAEC,IAAI,EAAE,oBAAoB;IAAEC,SAAS,EAAE;EAAM,CAAC,CAAC;EACrD,CAAC,EAAE,CAAC;IAAED,IAAI,EAAE,iCAAiC;IAAEC,SAAS,EAAE;EAAM,CAAC,CAAC;EAClE,CAAC,EAAE,CAAC;IAAED,IAAI,EAAE,uBAAuB;IAAEC,SAAS,EAAE;EAAM,CAAC;AACzD,CAAC;AAED,SAASC,SAASA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC3B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAACU,gBAAgB,CAAC;EAE5D,MAAMU,UAAU,GAAGA,CAACC,SAAS,EAAEC,KAAK,KAAK;IACvCH,YAAY,CAAEI,SAAS,IAAK;MAC1B,MAAMC,YAAY,GAAG,CAAC,GAAGD,SAAS,CAACF,SAAS,CAAC,CAAC;MAC9CG,YAAY,CAACF,KAAK,CAAC,CAACV,SAAS,GAAG,CAACY,YAAY,CAACF,KAAK,CAAC,CAACV,SAAS,CAAC,CAAC;MAChE,OAAO;QAAE,GAAGW,SAAS;QAAE,CAACF,SAAS,GAAGG;MAAa,CAAC;IACpD,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,cAAc,GAAGC,MAAM,CAACC,MAAM,CAACV,SAAS,CAAC,CAACW,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;MACpE,OAAOD,GAAG,GAAGC,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACrB,SAAS,CAAC,CAACsB,MAAM;IACzD,CAAC,EAAE,CAAC,CAAC;IACL,MAAMC,UAAU,GAAGR,MAAM,CAACC,MAAM,CAACV,SAAS,CAAC,CAACW,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACG,MAAM,EAAE,CAAC,CAAC;IACvF,OAAOC,UAAU,GAAIT,cAAc,GAAGS,UAAU,GAAI,GAAG,GAAG,CAAC;EAC7D,CAAC;EAED,MAAMC,kBAAkB,GAAIf,SAAS,IAAK;IACxC,MAAMT,SAAS,GAAGM,SAAS,CAACG,SAAS,CAAC,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACrB,SAAS,CAAC,CAACsB,MAAM;IAC5E,MAAMG,KAAK,GAAGnB,SAAS,CAACG,SAAS,CAAC,CAACa,MAAM;IACzC,OAAOG,KAAK,GAAIzB,SAAS,GAAGyB,KAAK,GAAI,GAAG,GAAG,CAAC;EAC9C,CAAC;EAED,oBACEhC,OAAA;IAAKiC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlC,OAAA;MAAKiC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BlC,OAAA;QAAAkC,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBtC,OAAA,CAACF,aAAa;QAACyC,QAAQ,EAAEnB,gBAAgB,CAAC;MAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACNtC,OAAA;MAAKiC,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BlC,OAAA;QAAAkC,QAAA,GAAKvB,aAAa,CAACR,KAAK,EAAC,aAAW;MAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzCtC,OAAA,CAACH,QAAQ;QACP2C,KAAK,EAAE3B,SAAS,CAACF,aAAa,CAACT,EAAE,CAAE;QACnCuC,QAAQ,EAAGxB,KAAK,IAAKF,UAAU,CAACJ,aAAa,CAACT,EAAE,EAAEe,KAAK;MAAE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eACFtC,OAAA;QAAAkC,QAAA,GAAKvB,aAAa,CAACR,KAAK,EAAC,WAAS;MAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvCtC,OAAA,CAAC0C,gBAAgB;QAACH,QAAQ,EAAER,kBAAkB,CAACpB,aAAa,CAACT,EAAE,CAAE;QAACE,KAAK,EAAEO,aAAa,CAACP;MAAM;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7F,CAAC,eACNtC,OAAA;MAAKiC,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpClC,OAAA;QAAAkC,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBtC,OAAA,CAACJ,YAAY;QACXK,QAAQ,EAAEA,QAAS;QACnB0C,eAAe,EAAE/B,gBAAiB;QAClCgC,eAAe,EAAEjC;MAAc;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5B,EAAA,CAnDQF,SAAS;AAAAqC,EAAA,GAATrC,SAAS;AAqDlB,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}