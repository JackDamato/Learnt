{"ast":null,"code":"var _jsxFileName = \"/workspaces/Learnt/learnt-front-end/src/components/ProgressWheel.js\";\nimport React from 'react';\nimport '../styles/ProgressWheel.css'; // Ensure this file has the necessary styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressWheel = ({\n  progress,\n  color = '#007aff'\n}) => {\n  const radius = 50; // Radius of the circle\n  const stroke = 10; // Width of the stroke\n  const normalizedRadius = radius - stroke * 0.5;\n  const circumference = normalizedRadius * 2 * Math.PI;\n  const strokeDashoffset = circumference - progress / 100 * circumference;\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    height: radius * 2,\n    width: radius * 2,\n    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n      stroke: \"#e6e6e6\",\n      fill: \"transparent\",\n      strokeWidth: stroke,\n      r: normalizedRadius,\n      cx: radius,\n      cy: radius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      stroke: color // Use the passed color\n      ,\n      fill: \"transparent\",\n      strokeWidth: stroke,\n      strokeDasharray: `${circumference} ${circumference}`,\n      style: {\n        strokeDashoffset\n      },\n      r: normalizedRadius,\n      cx: radius,\n      cy: radius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: \"50%\",\n      y: \"50%\",\n      textAnchor: \"middle\",\n      dy: \".3em\",\n      children: `${Math.round(progress)}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressWheel;\nexport default ProgressWheel;\nvar _c;\n$RefreshReg$(_c, \"ProgressWheel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProgressWheel","progress","color","radius","stroke","normalizedRadius","circumference","Math","PI","strokeDashoffset","height","width","children","fill","strokeWidth","r","cx","cy","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","style","x","y","textAnchor","dy","round","_c","$RefreshReg$"],"sources":["/workspaces/Learnt/learnt-front-end/src/components/ProgressWheel.js"],"sourcesContent":["import React from 'react';\nimport '../styles/ProgressWheel.css'; // Ensure this file has the necessary styles\n\nconst ProgressWheel = ({ progress, color = '#007aff' }) => {\n  const radius = 50; // Radius of the circle\n  const stroke = 10; // Width of the stroke\n  const normalizedRadius = radius - stroke * 0.5;\n  const circumference = normalizedRadius * 2 * Math.PI;\n  const strokeDashoffset = circumference - (progress / 100) * circumference;\n\n  return (\n    <svg height={radius * 2} width={radius * 2}>\n      <circle\n        stroke=\"#e6e6e6\"\n        fill=\"transparent\"\n        strokeWidth={stroke}\n        r={normalizedRadius}\n        cx={radius}\n        cy={radius}\n      />\n      <circle\n        stroke={color} // Use the passed color\n        fill=\"transparent\"\n        strokeWidth={stroke}\n        strokeDasharray={`${circumference} ${circumference}`}\n        style={{ strokeDashoffset }}\n        r={normalizedRadius}\n        cx={radius}\n        cy={radius}\n      />\n      <text x=\"50%\" y=\"50%\" textAnchor=\"middle\" dy=\".3em\">\n        {`${Math.round(progress)}%`}\n      </text>\n    </svg>\n  );\n};\n\nexport default ProgressWheel;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,6BAA6B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,KAAK,GAAG;AAAU,CAAC,KAAK;EACzD,MAAMC,MAAM,GAAG,EAAE,CAAC,CAAC;EACnB,MAAMC,MAAM,GAAG,EAAE,CAAC,CAAC;EACnB,MAAMC,gBAAgB,GAAGF,MAAM,GAAGC,MAAM,GAAG,GAAG;EAC9C,MAAME,aAAa,GAAGD,gBAAgB,GAAG,CAAC,GAAGE,IAAI,CAACC,EAAE;EACpD,MAAMC,gBAAgB,GAAGH,aAAa,GAAIL,QAAQ,GAAG,GAAG,GAAIK,aAAa;EAEzE,oBACEP,OAAA;IAAKW,MAAM,EAAEP,MAAM,GAAG,CAAE;IAACQ,KAAK,EAAER,MAAM,GAAG,CAAE;IAAAS,QAAA,gBACzCb,OAAA;MACEK,MAAM,EAAC,SAAS;MAChBS,IAAI,EAAC,aAAa;MAClBC,WAAW,EAAEV,MAAO;MACpBW,CAAC,EAAEV,gBAAiB;MACpBW,EAAE,EAAEb,MAAO;MACXc,EAAE,EAAEd;IAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACFtB,OAAA;MACEK,MAAM,EAAEF,KAAM,CAAC;MAAA;MACfW,IAAI,EAAC,aAAa;MAClBC,WAAW,EAAEV,MAAO;MACpBkB,eAAe,EAAE,GAAGhB,aAAa,IAAIA,aAAa,EAAG;MACrDiB,KAAK,EAAE;QAAEd;MAAiB,CAAE;MAC5BM,CAAC,EAAEV,gBAAiB;MACpBW,EAAE,EAAEb,MAAO;MACXc,EAAE,EAAEd;IAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACFtB,OAAA;MAAMyB,CAAC,EAAC,KAAK;MAACC,CAAC,EAAC,KAAK;MAACC,UAAU,EAAC,QAAQ;MAACC,EAAE,EAAC,MAAM;MAAAf,QAAA,EAChD,GAAGL,IAAI,CAACqB,KAAK,CAAC3B,QAAQ,CAAC;IAAG;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACQ,EAAA,GAhCI7B,aAAa;AAkCnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}