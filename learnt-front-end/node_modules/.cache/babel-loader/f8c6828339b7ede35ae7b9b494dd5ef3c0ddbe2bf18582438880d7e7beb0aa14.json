{"ast":null,"code":"var _jsxFileName = \"/workspaces/Learnt/learnt-front-end/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"../styles/Form.css\";\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const [subjectClassName, setSubjectClassName] = useState('');\n  const [topicOfExam, setTopicOfExam] = useState('');\n  const [learningGoals, setLearningGoals] = useState('');\n  const [testDate, setTestDate] = useState('');\n  const [availableStudySessions, setAvailableStudySessions] = useState('');\n  const [workTimePerSession, setWorkTimePerSession] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const formData = {\n      subject: subjectClassName,\n      topics: topicOfExam,\n      learning_goals: learningGoals,\n      date: testDate,\n      number: availableStudySessions,\n      length: workTimePerSession\n    };\n    try {\n      const response = await fetch('/materials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const studyGuideContent = data.study_guide;\n        const studyPlannerContent = data.study_planner;\n\n        // Save the study guide information in localStorage\n        const studyGuides = JSON.parse(localStorage.getItem('studyGuides')) || [];\n        const newGuide = {\n          subject: subjectClassName,\n          date: new Date().toLocaleDateString(),\n          studyGuide: studyGuideContent,\n          studyPlanner: studyPlannerContent\n        };\n        studyGuides.push(newGuide);\n        localStorage.setItem('studyGuides', JSON.stringify(studyGuides));\n\n        // Navigate to review page\n        navigate('/submission-review', {\n          state: {\n            formData,\n            studyGuide: studyGuideContent,\n            studyPlanner: studyPlannerContent\n          }\n        });\n      } else {\n        console.error('Failed to create study guide');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Class Name\",\n        value: subjectClassName,\n        onChange: e => setSubjectClassName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Exam Topics/Material\",\n        value: topicOfExam,\n        onChange: e => setTopicOfExam(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Learning Goals\",\n        value: learningGoals,\n        onChange: e => setLearningGoals(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: testDate,\n        onChange: e => setTestDate(e.target.value),\n        required: true,\n        max: \"2099-12-31\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Available Study Sessions\",\n        value: availableStudySessions,\n        onChange: e => setAvailableStudySessions(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Average Time Per Session (in Hours)\",\n        value: workTimePerSession,\n        onChange: e => setWorkTimePerSession(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"yfxGmaxykiqm3+/k2KaWskxJ28g=\", false, function () {\n  return [useNavigate];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useNavigate","Loading","jsxDEV","_jsxDEV","Form","_s","subjectClassName","setSubjectClassName","topicOfExam","setTopicOfExam","learningGoals","setLearningGoals","testDate","setTestDate","availableStudySessions","setAvailableStudySessions","workTimePerSession","setWorkTimePerSession","loading","setLoading","navigate","handleSubmit","e","preventDefault","formData","subject","topics","learning_goals","date","number","length","response","fetch","method","headers","body","JSON","stringify","ok","data","json","studyGuideContent","study_guide","studyPlannerContent","study_planner","studyGuides","parse","localStorage","getItem","newGuide","Date","toLocaleDateString","studyGuide","studyPlanner","push","setItem","state","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","placeholder","value","onChange","target","required","max","_c","$RefreshReg$"],"sources":["/workspaces/Learnt/learnt-front-end/src/components/Form.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"../styles/Form.css\";\nimport Loading from './Loading';\n\nfunction Form() {\n  const [subjectClassName, setSubjectClassName] = useState('');\n  const [topicOfExam, setTopicOfExam] = useState('');\n  const [learningGoals, setLearningGoals] = useState('');\n  const [testDate, setTestDate] = useState('');\n  const [availableStudySessions, setAvailableStudySessions] = useState('');\n  const [workTimePerSession, setWorkTimePerSession] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const formData = {\n      subject: subjectClassName,\n      topics: topicOfExam,\n      learning_goals: learningGoals,\n      date: testDate,\n      number: availableStudySessions,\n      length: workTimePerSession,\n    };\n  \n    try {\n      const response = await fetch('/materials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n  \n      if (response.ok) {\n        const data = await response.json();\n        const studyGuideContent = data.study_guide;\n        const studyPlannerContent = data.study_planner;\n  \n        // Save the study guide information in localStorage\n        const studyGuides = JSON.parse(localStorage.getItem('studyGuides')) || [];\n        const newGuide = {\n          subject: subjectClassName,\n          date: new Date().toLocaleDateString(),\n          studyGuide: studyGuideContent,\n          studyPlanner: studyPlannerContent,\n        };\n        studyGuides.push(newGuide);\n        localStorage.setItem('studyGuides', JSON.stringify(studyGuides));\n\n        // Navigate to review page\n        navigate('/submission-review', {\n          state: {\n            formData,\n            studyGuide: studyGuideContent,\n            studyPlanner: studyPlannerContent,\n          },\n        });\n      } else {\n        console.error('Failed to create study guide');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      {loading && <Loading />}\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Class Name\"\n          value={subjectClassName}\n          onChange={(e) => setSubjectClassName(e.target.value)}\n          required\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Exam Topics/Material\"\n          value={topicOfExam}\n          onChange={(e) => setTopicOfExam(e.target.value)}\n          required\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Learning Goals\"\n          value={learningGoals}\n          onChange={(e) => setLearningGoals(e.target.value)}\n          required\n        />\n        <input\n          type=\"date\"\n          value={testDate}\n          onChange={(e) => setTestDate(e.target.value)}\n          required\n          max=\"2099-12-31\"\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Available Study Sessions\"\n          value={availableStudySessions}\n          onChange={(e) => setAvailableStudySessions(e.target.value)}\n          required\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Average Time Per Session (in Hours)\"\n          value={workTimePerSession}\n          onChange={(e) => setWorkTimePerSession(e.target.value)}\n          required\n        />\n        <button type=\"submit\" className=\"submit-button\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}