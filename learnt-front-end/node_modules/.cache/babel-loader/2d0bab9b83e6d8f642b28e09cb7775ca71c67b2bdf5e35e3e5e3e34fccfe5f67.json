{"ast":null,"code":"var _jsxFileName = \"/workspaces/Learnt/learnt-front-end/src/components/SubmissionReviews.js\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useState } from 'react';\nimport { jsPDF } from 'jspdf'; // Import jsPDF\nimport \"../styles/SubmissionReviews.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SubmissionReviews = () => {\n  _s();\n  const [studyGuide, setStudyGuide] = useState('');\n  const [studyPlanner, setStudyPlanner] = useState('');\n  const [subject, setSubject] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/data'); // Make sure to replace with the correct URL if necessary\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setStudyGuide(data.study_guide);\n        setStudyPlanner(data.study_planner);\n        setSubject(data.user_data.subject);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const saveToPDF = () => {\n    const doc = new jsPDF();\n    const margin = 15; // Set a margin of 15 units\n    const pageWidth = doc.internal.pageSize.getWidth() - 2 * margin; // Width minus left and right margins\n    const pageHeight = doc.internal.pageSize.getHeight() - 2 * margin; // Height minus top and bottom margins\n    let verticalPosition = margin; // Starting vertical position for the text\n\n    // Add title\n    doc.setFontSize(18);\n    doc.text(`Study Guide for ${subject}`, margin, verticalPosition);\n    verticalPosition += 10; // Increase vertical position after the title\n\n    // Wrap study guide text\n    doc.setFontSize(12);\n    const studyGuideLines = doc.splitTextToSize(studyGuide, pageWidth);\n\n    // Add study guide text to PDF\n    studyGuideLines.forEach(line => {\n      if (verticalPosition + 10 > pageHeight + margin) {\n        // Add margin to the height check\n        doc.addPage(); // Add new page if vertical position exceeds page height\n        verticalPosition = margin; // Reset vertical position for new page\n      }\n      doc.text(line, margin, verticalPosition);\n      verticalPosition += 10; // Increase vertical position after each line\n    });\n\n    // Add a new page for the study planner\n    doc.addPage();\n    verticalPosition = margin; // Reset vertical position for the new page\n    doc.text(`Study Planner:`, margin, verticalPosition);\n    verticalPosition += 10; // Increase vertical position after the title\n\n    // Wrap study planner text\n    const studyPlannerLines = doc.splitTextToSize(studyPlanner, pageWidth);\n\n    // Add study planner text to PDF\n    studyPlannerLines.forEach(line => {\n      if (verticalPosition + 10 > pageHeight + margin) {\n        // Add margin to the height check\n        doc.addPage(); // Add new page if vertical position exceeds page height\n        verticalPosition = margin; // Reset vertical position for new page\n      }\n      doc.text(line, margin, verticalPosition);\n      verticalPosition += 10; // Increase vertical position after each line\n    });\n\n    // Save the PDF\n    doc.save(`${subject} Study Guide.pdf`);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error fetching data: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: studyGuide ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-button-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveToPDF,\n          className: \"study-guide-pdf-button\",\n          children: [\"Download \", subject, \" Study Guide pdf\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submission-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"study-guide-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Study Guide for \", subject]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: studyGuide\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"study-planner-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Study Planner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: studyPlanner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No submission data available. Please submit the form to generate study materials.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(SubmissionReviews, \"mAkR3UHemfCPCIgqTjCtYRs9MSs=\");\n_c = SubmissionReviews;\nexport default SubmissionReviews;\nvar _c;\n$RefreshReg$(_c, \"SubmissionReviews\");","map":{"version":3,"names":["React","useEffect","useState","jsPDF","jsxDEV","_jsxDEV","Fragment","_Fragment","SubmissionReviews","_s","studyGuide","setStudyGuide","studyPlanner","setStudyPlanner","subject","setSubject","loading","setLoading","error","setError","fetchData","response","fetch","ok","Error","data","json","study_guide","study_planner","user_data","message","saveToPDF","doc","margin","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","verticalPosition","setFontSize","text","studyGuideLines","splitTextToSize","forEach","line","addPage","studyPlannerLines","save","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/workspaces/Learnt/learnt-front-end/src/components/SubmissionReviews.js"],"sourcesContent":["import { React, useEffect, useState } from 'react';\nimport { jsPDF } from 'jspdf'; // Import jsPDF\nimport \"../styles/SubmissionReviews.css\";\n\nconst SubmissionReviews = () => {\n  const [studyGuide, setStudyGuide] = useState('');\n  const [studyPlanner, setStudyPlanner] = useState('');\n  const [subject, setSubject] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/data'); // Make sure to replace with the correct URL if necessary\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setStudyGuide(data.study_guide);\n        setStudyPlanner(data.study_planner);\n        setSubject(data.user_data.subject);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const saveToPDF = () => {\n    const doc = new jsPDF();\n    const margin = 15; // Set a margin of 15 units\n    const pageWidth = doc.internal.pageSize.getWidth() - 2 * margin; // Width minus left and right margins\n    const pageHeight = doc.internal.pageSize.getHeight() - 2 * margin; // Height minus top and bottom margins\n    let verticalPosition = margin; // Starting vertical position for the text\n  \n    // Add title\n    doc.setFontSize(18);\n    doc.text(`Study Guide for ${subject}`, margin, verticalPosition);\n    verticalPosition += 10; // Increase vertical position after the title\n  \n    // Wrap study guide text\n    doc.setFontSize(12);\n    const studyGuideLines = doc.splitTextToSize(studyGuide, pageWidth);\n    \n    // Add study guide text to PDF\n    studyGuideLines.forEach(line => {\n      if (verticalPosition + 10 > pageHeight + margin) { // Add margin to the height check\n        doc.addPage(); // Add new page if vertical position exceeds page height\n        verticalPosition = margin; // Reset vertical position for new page\n      }\n      doc.text(line, margin, verticalPosition);\n      verticalPosition += 10; // Increase vertical position after each line\n    });\n  \n    // Add a new page for the study planner\n    doc.addPage();\n    verticalPosition = margin; // Reset vertical position for the new page\n    doc.text(`Study Planner:`, margin, verticalPosition);\n    verticalPosition += 10; // Increase vertical position after the title\n  \n    // Wrap study planner text\n    const studyPlannerLines = doc.splitTextToSize(studyPlanner, pageWidth);\n    \n    // Add study planner text to PDF\n    studyPlannerLines.forEach(line => {\n      if (verticalPosition + 10 > pageHeight + margin) { // Add margin to the height check\n        doc.addPage(); // Add new page if vertical position exceeds page height\n        verticalPosition = margin; // Reset vertical position for new page\n      }\n      doc.text(line, margin, verticalPosition);\n      verticalPosition += 10; // Increase vertical position after each line\n    });\n  \n    // Save the PDF\n    doc.save(`${subject} Study Guide.pdf`);\n  };\n    \n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>Error fetching data: {error}</p>;\n  }\n\n  return (\n    <div>\n      {studyGuide ? (\n        <>\n        <div className='pdf-button-wrapper'>\n          <button onClick={saveToPDF} className='study-guide-pdf-button'>\n            Download {subject} Study Guide pdf\n          </button>\n        </div>\n        <div className=\"submission-body\">\n          <div className=\"study-guide-wrapper\">\n            <h3>Study Guide for {subject}</h3>\n            <pre>{studyGuide}</pre>\n          </div>\n          <div className=\"study-planner-wrapper\">\n            <h3>Study Planner</h3>\n            <pre>{studyPlanner}</pre>\n          </div>\n        </div>\n\n        </>\n      ) : (\n        <p>No submission data available. Please submit the form to generate study materials.</p>\n      )}\n    </div>\n  );\n};\n\nexport default SubmissionReviews;\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,OAAO,CAAC,CAAC;AAC/B,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QACvC,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCf,aAAa,CAACc,IAAI,CAACE,WAAW,CAAC;QAC/Bd,eAAe,CAACY,IAAI,CAACG,aAAa,CAAC;QACnCb,UAAU,CAACU,IAAI,CAACI,SAAS,CAACf,OAAO,CAAC;MACpC,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACY,OAAO,CAAC;MACzB,CAAC,SAAS;QACRb,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,GAAG,GAAG,IAAI7B,KAAK,CAAC,CAAC;IACvB,MAAM8B,MAAM,GAAG,EAAE,CAAC,CAAC;IACnB,MAAMC,SAAS,GAAGF,GAAG,CAACG,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAGJ,MAAM,CAAC,CAAC;IACjE,MAAMK,UAAU,GAAGN,GAAG,CAACG,QAAQ,CAACC,QAAQ,CAACG,SAAS,CAAC,CAAC,GAAG,CAAC,GAAGN,MAAM,CAAC,CAAC;IACnE,IAAIO,gBAAgB,GAAGP,MAAM,CAAC,CAAC;;IAE/B;IACAD,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;IACnBT,GAAG,CAACU,IAAI,CAAC,mBAAmB5B,OAAO,EAAE,EAAEmB,MAAM,EAAEO,gBAAgB,CAAC;IAChEA,gBAAgB,IAAI,EAAE,CAAC,CAAC;;IAExB;IACAR,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;IACnB,MAAME,eAAe,GAAGX,GAAG,CAACY,eAAe,CAAClC,UAAU,EAAEwB,SAAS,CAAC;;IAElE;IACAS,eAAe,CAACE,OAAO,CAACC,IAAI,IAAI;MAC9B,IAAIN,gBAAgB,GAAG,EAAE,GAAGF,UAAU,GAAGL,MAAM,EAAE;QAAE;QACjDD,GAAG,CAACe,OAAO,CAAC,CAAC,CAAC,CAAC;QACfP,gBAAgB,GAAGP,MAAM,CAAC,CAAC;MAC7B;MACAD,GAAG,CAACU,IAAI,CAACI,IAAI,EAAEb,MAAM,EAAEO,gBAAgB,CAAC;MACxCA,gBAAgB,IAAI,EAAE,CAAC,CAAC;IAC1B,CAAC,CAAC;;IAEF;IACAR,GAAG,CAACe,OAAO,CAAC,CAAC;IACbP,gBAAgB,GAAGP,MAAM,CAAC,CAAC;IAC3BD,GAAG,CAACU,IAAI,CAAC,gBAAgB,EAAET,MAAM,EAAEO,gBAAgB,CAAC;IACpDA,gBAAgB,IAAI,EAAE,CAAC,CAAC;;IAExB;IACA,MAAMQ,iBAAiB,GAAGhB,GAAG,CAACY,eAAe,CAAChC,YAAY,EAAEsB,SAAS,CAAC;;IAEtE;IACAc,iBAAiB,CAACH,OAAO,CAACC,IAAI,IAAI;MAChC,IAAIN,gBAAgB,GAAG,EAAE,GAAGF,UAAU,GAAGL,MAAM,EAAE;QAAE;QACjDD,GAAG,CAACe,OAAO,CAAC,CAAC,CAAC,CAAC;QACfP,gBAAgB,GAAGP,MAAM,CAAC,CAAC;MAC7B;MACAD,GAAG,CAACU,IAAI,CAACI,IAAI,EAAEb,MAAM,EAAEO,gBAAgB,CAAC;MACxCA,gBAAgB,IAAI,EAAE,CAAC,CAAC;IAC1B,CAAC,CAAC;;IAEF;IACAR,GAAG,CAACiB,IAAI,CAAC,GAAGnC,OAAO,kBAAkB,CAAC;EACxC,CAAC;EAED,IAAIE,OAAO,EAAE;IACX,oBAAOX,OAAA;MAAA6C,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,IAAIpC,KAAK,EAAE;IACT,oBAAOb,OAAA;MAAA6C,QAAA,GAAG,uBAAqB,EAAChC,KAAK;IAAA;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC5C;EAEA,oBACEjD,OAAA;IAAA6C,QAAA,EACGxC,UAAU,gBACTL,OAAA,CAAAE,SAAA;MAAA2C,QAAA,gBACA7C,OAAA;QAAKkD,SAAS,EAAC,oBAAoB;QAAAL,QAAA,eACjC7C,OAAA;UAAQmD,OAAO,EAAEzB,SAAU;UAACwB,SAAS,EAAC,wBAAwB;UAAAL,QAAA,GAAC,WACpD,EAACpC,OAAO,EAAC,kBACpB;QAAA;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNjD,OAAA;QAAKkD,SAAS,EAAC,iBAAiB;QAAAL,QAAA,gBAC9B7C,OAAA;UAAKkD,SAAS,EAAC,qBAAqB;UAAAL,QAAA,gBAClC7C,OAAA;YAAA6C,QAAA,GAAI,kBAAgB,EAACpC,OAAO;UAAA;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClCjD,OAAA;YAAA6C,QAAA,EAAMxC;UAAU;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eACNjD,OAAA;UAAKkD,SAAS,EAAC,uBAAuB;UAAAL,QAAA,gBACpC7C,OAAA;YAAA6C,QAAA,EAAI;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtBjD,OAAA;YAAA6C,QAAA,EAAMtC;UAAY;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,eAEJ,CAAC,gBAEHjD,OAAA;MAAA6C,QAAA,EAAG;IAAiF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACxF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7C,EAAA,CA/GID,iBAAiB;AAAAiD,EAAA,GAAjBjD,iBAAiB;AAiHvB,eAAeA,iBAAiB;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}