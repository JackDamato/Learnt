{"ast":null,"code":"var _jsxFileName = \"/workspaces/Learnt/learnt-front-end/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    text: 'Finish reading chapter 3',\n    completed: false\n  }, {\n    text: 'Practice math exercises',\n    completed: false\n  }, {\n    text: 'Complete chemistry lab report',\n    completed: false\n  }]);\n  const handleToggle = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    updatedTasks.sort((a, b) => a.completed - b.completed); // Move completed tasks to the bottom\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.completed ? 'completed' : '',\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.completed,\n            onChange: () => handleToggle(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), task.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"/BE2GR34FQ+cbQHn3pFKg8kClps=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","text","completed","handleToggle","index","updatedTasks","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","type","checked","onChange","_c","$RefreshReg$"],"sources":["/workspaces/Learnt/learnt-front-end/src/components/ToDoList.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction ToDoList() {\n  const [tasks, setTasks] = useState([\n    { text: 'Finish reading chapter 3', completed: false },\n    { text: 'Practice math exercises', completed: false },\n    { text: 'Complete chemistry lab report', completed: false },\n  ]);\n\n  const handleToggle = (index) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    updatedTasks.sort((a, b) => a.completed - b.completed); // Move completed tasks to the bottom\n    setTasks(updatedTasks);\n  };\n\n  return (\n    <div className=\"todo-list\">\n      <h2>To-Do List</h2>\n      <ul>\n        {tasks.map((task, index) => (\n          <li key={index} className={task.completed ? 'completed' : ''}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={task.completed}\n                onChange={() => handleToggle(index)}\n              />\n              {task.text}\n            </label>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ToDoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CACjC;IAAEO,IAAI,EAAE,0BAA0B;IAAEC,SAAS,EAAE;EAAM,CAAC,EACtD;IAAED,IAAI,EAAE,yBAAyB;IAAEC,SAAS,EAAE;EAAM,CAAC,EACrD;IAAED,IAAI,EAAE,+BAA+B;IAAEC,SAAS,EAAE;EAAM,CAAC,CAC5D,CAAC;EAEF,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMC,YAAY,GAAG,CAAC,GAAGN,KAAK,CAAC;IAC/BM,YAAY,CAACD,KAAK,CAAC,CAACF,SAAS,GAAG,CAACG,YAAY,CAACD,KAAK,CAAC,CAACF,SAAS;IAC9DG,YAAY,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACL,SAAS,GAAGM,CAAC,CAACN,SAAS,CAAC,CAAC,CAAC;IACxDF,QAAQ,CAACK,YAAY,CAAC;EACxB,CAAC;EAED,oBACET,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBd,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBlB,OAAA;MAAAc,QAAA,EACGX,KAAK,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEZ,KAAK,kBACrBR,OAAA;QAAgBa,SAAS,EAAEO,IAAI,CAACd,SAAS,GAAG,WAAW,GAAG,EAAG;QAAAQ,QAAA,eAC3Dd,OAAA;UAAAc,QAAA,gBACEd,OAAA;YACEqB,IAAI,EAAC,UAAU;YACfC,OAAO,EAAEF,IAAI,CAACd,SAAU;YACxBiB,QAAQ,EAAEA,CAAA,KAAMhB,YAAY,CAACC,KAAK;UAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC,EACDE,IAAI,CAACf,IAAI;QAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC,GARDV,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAChB,EAAA,CAjCQD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAmCjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}