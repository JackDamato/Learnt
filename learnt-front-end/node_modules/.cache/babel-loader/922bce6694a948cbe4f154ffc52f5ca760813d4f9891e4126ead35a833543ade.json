{"ast":null,"code":"var _jsxFileName = \"/workspaces/Learnt/learnt-front-end/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsPDF } from 'jspdf'; // Ensure jsPDF is imported\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const navigate = useNavigate();\n  const [studyGuides, setStudyGuides] = useState([]);\n  useEffect(() => {\n    // Load study guides from localStorage\n    const savedStudyGuides = JSON.parse(localStorage.getItem('studyGuides')) || [];\n    setStudyGuides(savedStudyGuides);\n  }, []);\n  const handleAddSubjectClick = () => {\n    navigate('/form');\n  };\n  const downloadPDF = guide => {\n    const {\n      studyGuide,\n      studyPlanner,\n      subject\n    } = guide;\n\n    // Check if studyGuide and studyPlanner are defined\n    if (!studyGuide || !studyPlanner) {\n      console.error('Study guide or planner content is missing');\n      return;\n    }\n    const doc = new jsPDF();\n    const margin = 10;\n    const pageWidth = doc.internal.pageSize.getWidth() - 2 * margin;\n    const titleYPosition = margin + 10;\n    const bodyStartY = titleYPosition + 10;\n    const lineSpacing = 6;\n    doc.setFontSize(18);\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(`Study Guide for ${subject}`, margin, titleYPosition);\n    doc.setFontSize(12);\n    doc.setFont(\"helvetica\", \"normal\");\n\n    // Split the study guide content into lines\n    const studyGuideLines = doc.splitTextToSize(studyGuide, pageWidth);\n    let currentY = bodyStartY;\n    studyGuideLines.forEach(line => {\n      if (currentY + lineSpacing > doc.internal.pageSize.height - margin) {\n        doc.addPage();\n        currentY = margin;\n      }\n      doc.text(line, margin, currentY);\n      currentY += lineSpacing;\n    });\n    doc.addPage();\n    doc.setFontSize(18);\n    doc.text(`Study Plan:`, margin, titleYPosition);\n\n    // Split the study planner content into lines\n    const studyPlannerLines = doc.splitTextToSize(studyPlanner, pageWidth);\n    currentY = bodyStartY;\n    studyPlannerLines.forEach(line => {\n      if (currentY + lineSpacing > doc.internal.pageSize.height - margin) {\n        doc.addPage();\n        currentY = margin;\n      }\n      doc.text(line, margin, currentY);\n      currentY += lineSpacing;\n    });\n    doc.save(`${subject} Study Guide.pdf`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"previous-study-guides\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Previous Study Guides\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), studyGuides.length > 0 ? studyGuides.map((guide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"study-guide-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Subject:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 18\n          }, this), \" \", guide.subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date Created:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 18\n          }, this), \" \", guide.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => downloadPDF(guide),\n          children: \"Download PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No study guides available. Create a new one!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subject-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-subject-button\",\n          onClick: handleAddSubjectClick,\n          children: \"Create New Study Guide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"Q3Ry4Gu0oesBC3VsUi4oxQ2fmIc=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","useNavigate","jsPDF","jsxDEV","_jsxDEV","Dashboard","_s","navigate","studyGuides","setStudyGuides","savedStudyGuides","JSON","parse","localStorage","getItem","handleAddSubjectClick","downloadPDF","guide","studyGuide","studyPlanner","subject","console","error","doc","margin","pageWidth","internal","pageSize","getWidth","titleYPosition","bodyStartY","lineSpacing","setFontSize","setFont","text","studyGuideLines","splitTextToSize","currentY","forEach","line","height","addPage","studyPlannerLines","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","date","onClick","_c","$RefreshReg$"],"sources":["/workspaces/Learnt/learnt-front-end/src/components/Dashboard.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; \nimport { jsPDF } from 'jspdf'; // Ensure jsPDF is imported\nimport '../styles/Dashboard.css';\n\nfunction Dashboard() {\n  const navigate = useNavigate(); \n  const [studyGuides, setStudyGuides] = useState([]);\n\n  useEffect(() => {\n    // Load study guides from localStorage\n    const savedStudyGuides = JSON.parse(localStorage.getItem('studyGuides')) || [];\n    setStudyGuides(savedStudyGuides);\n  }, []);\n\n  const handleAddSubjectClick = () => {\n    navigate('/form'); \n  };\n\n  const downloadPDF = (guide) => {\n    const { studyGuide, studyPlanner, subject } = guide;\n\n    // Check if studyGuide and studyPlanner are defined\n    if (!studyGuide || !studyPlanner) {\n      console.error('Study guide or planner content is missing');\n      return;\n    }\n\n    const doc = new jsPDF();\n    const margin = 10; \n    const pageWidth = doc.internal.pageSize.getWidth() - 2 * margin; \n    const titleYPosition = margin + 10;\n    const bodyStartY = titleYPosition + 10;\n    const lineSpacing = 6; \n\n    doc.setFontSize(18);\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(`Study Guide for ${subject}`, margin, titleYPosition);\n\n    doc.setFontSize(12);\n    doc.setFont(\"helvetica\", \"normal\");\n\n    // Split the study guide content into lines\n    const studyGuideLines = doc.splitTextToSize(studyGuide, pageWidth);\n    let currentY = bodyStartY;\n\n    studyGuideLines.forEach((line) => {\n      if (currentY + lineSpacing > doc.internal.pageSize.height - margin) {\n        doc.addPage();\n        currentY = margin;\n      }\n      doc.text(line, margin, currentY);\n      currentY += lineSpacing;\n    });\n\n    doc.addPage();\n    doc.setFontSize(18);\n    doc.text(`Study Plan:`, margin, titleYPosition);\n\n    // Split the study planner content into lines\n    const studyPlannerLines = doc.splitTextToSize(studyPlanner, pageWidth);\n    currentY = bodyStartY;\n\n    studyPlannerLines.forEach((line) => {\n      if (currentY + lineSpacing > doc.internal.pageSize.height - margin) {\n        doc.addPage();\n        currentY = margin;\n      }\n      doc.text(line, margin, currentY);\n      currentY += lineSpacing;\n    });\n\n    doc.save(`${subject} Study Guide.pdf`);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"previous-study-guides\">\n        <h2>Previous Study Guides</h2>\n        {studyGuides.length > 0 ? (\n          studyGuides.map((guide, index) => (\n            <div key={index} className=\"study-guide-item\">\n              <p><strong>Subject:</strong> {guide.subject}</p>\n              <p><strong>Date Created:</strong> {guide.date}</p>\n              <button onClick={() => downloadPDF(guide)}>Download PDF</button>\n            </div>\n          ))\n        ) : (\n          <p>No study guides available. Create a new one!</p>\n        )}\n      </div>\n      <div className=\"subject-section\">\n        <div className=\"button-wrapper\">\n          <button className=\"add-subject-button\" onClick={handleAddSubjectClick}>\n            Create New Study Guide\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}