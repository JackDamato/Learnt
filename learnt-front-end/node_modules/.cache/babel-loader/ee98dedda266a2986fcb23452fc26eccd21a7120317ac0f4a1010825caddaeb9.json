{"ast":null,"code":"var _jsxFileName = \"/workspaces/Learnt/learnt-front-end/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SubjectCards from './SubjectCards';\nimport TodoList from './ToDoList';\nimport ProgressWheel from './ProgressWheel';\nimport '../styles/Dashboard.css'; // Ensure this file is updated with styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst subjects = [{\n  id: 1,\n  title: 'Mathematics',\n  color: '#FF5733'\n}, {\n  id: 2,\n  title: 'Science',\n  color: '#33FF57'\n}, {\n  id: 3,\n  title: 'History',\n  color: '#3357FF'\n}];\nconst initialTodoLists = {\n  1: [{\n    text: 'Complete Chapter 1',\n    completed: false\n  }],\n  2: [{\n    text: 'Read Article on Quantum Physics',\n    completed: false\n  }],\n  3: [{\n    text: 'Research World War II',\n    completed: false\n  }]\n};\nfunction Dashboard({\n  user\n}) {\n  _s();\n  const [activeSubject, setActiveSubject] = useState(subjects[0]);\n  const [todoLists, setTodoLists] = useState(initialTodoLists);\n  const addTodo = (subjectId, todo) => {\n    setTodoLists(prevLists => ({\n      ...prevLists,\n      [subjectId]: [...prevLists[subjectId], {\n        text: todo,\n        completed: false\n      }]\n    }));\n  };\n\n  // const toggleTodo = (subjectId, index) => {\n  //   setTodoLists((prevLists) => {\n  //     const updatedTodos = [...prevLists[subjectId]];\n  //     updatedTodos[index].completed = !updatedTodos[index].completed; // Toggle completion status\n  //     return { ...prevLists, [subjectId]: updatedTodos };\n  //   });\n  // };\n\n  const getTotalProgress = () => {\n    const totalCompleted = Object.values(todoLists).reduce((acc, list) => {\n      return acc + list.filter(todo => todo.completed).length;\n    }, 0);\n    const totalItems = Object.values(todoLists).reduce((acc, list) => acc + list.length, 0);\n    return totalItems ? totalCompleted / totalItems * 100 : 0;\n  };\n  const getSubjectProgress = subjectId => {\n    const completed = todoLists[subjectId].filter(todo => todo.completed).length;\n    const total = todoLists[subjectId].length;\n    return total ? completed / total * 100 : 0;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Overall Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressWheel, {\n        progress: getTotalProgress()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [activeSubject.title, \" To-Do List\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todoLists[activeSubject.id],\n        onToggle: index => toggleTodo(activeSubject.id, index) // Pass the index for the toggle\n        ,\n        onAddTodo: addTodo // Pass down the addTodo function\n        ,\n        subjectId: activeSubject.id // Pass down the subjectId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [activeSubject.title, \" Progress\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressWheel, {\n        progress: getSubjectProgress(activeSubject.id),\n        color: activeSubject.color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subject-cards-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select a Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubjectCards, {\n        subjects: subjects,\n        onSubjectSelect: setActiveSubject,\n        selectedSubject: activeSubject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"ymm9BZRanFvIf/umbcPe9hbGT7I=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","SubjectCards","TodoList","ProgressWheel","jsxDEV","_jsxDEV","subjects","id","title","color","initialTodoLists","text","completed","Dashboard","user","_s","activeSubject","setActiveSubject","todoLists","setTodoLists","addTodo","subjectId","todo","prevLists","getTotalProgress","totalCompleted","Object","values","reduce","acc","list","filter","length","totalItems","getSubjectProgress","total","className","children","fileName","_jsxFileName","lineNumber","columnNumber","progress","todos","onToggle","index","toggleTodo","onAddTodo","onSubjectSelect","selectedSubject","_c","$RefreshReg$"],"sources":["/workspaces/Learnt/learnt-front-end/src/components/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SubjectCards from './SubjectCards';\nimport TodoList from './ToDoList';\nimport ProgressWheel from './ProgressWheel';\nimport '../styles/Dashboard.css'; // Ensure this file is updated with styles\n\nconst subjects = [\n  { id: 1, title: 'Mathematics', color: '#FF5733' },\n  { id: 2, title: 'Science', color: '#33FF57' },\n  { id: 3, title: 'History', color: '#3357FF' },\n];\n\nconst initialTodoLists = {\n  1: [{ text: 'Complete Chapter 1', completed: false }],\n  2: [{ text: 'Read Article on Quantum Physics', completed: false }],\n  3: [{ text: 'Research World War II', completed: false }],\n};\n\nfunction Dashboard({ user }) {\n  const [activeSubject, setActiveSubject] = useState(subjects[0]);\n  const [todoLists, setTodoLists] = useState(initialTodoLists);\n\n  const addTodo = (subjectId, todo) => {\n    setTodoLists((prevLists) => ({\n      ...prevLists,\n      [subjectId]: [...prevLists[subjectId], { text: todo, completed: false }],\n    }));\n  };\n\n  // const toggleTodo = (subjectId, index) => {\n  //   setTodoLists((prevLists) => {\n  //     const updatedTodos = [...prevLists[subjectId]];\n  //     updatedTodos[index].completed = !updatedTodos[index].completed; // Toggle completion status\n  //     return { ...prevLists, [subjectId]: updatedTodos };\n  //   });\n  // };\n\n  const getTotalProgress = () => {\n    const totalCompleted = Object.values(todoLists).reduce((acc, list) => {\n      return acc + list.filter(todo => todo.completed).length;\n    }, 0);\n    const totalItems = Object.values(todoLists).reduce((acc, list) => acc + list.length, 0);\n    return totalItems ? (totalCompleted / totalItems) * 100 : 0;\n  };\n\n  const getSubjectProgress = (subjectId) => {\n    const completed = todoLists[subjectId].filter(todo => todo.completed).length;\n    const total = todoLists[subjectId].length;\n    return total ? (completed / total) * 100 : 0;\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"progress-section\">\n        <h2>Overall Progress</h2>\n        <ProgressWheel progress={getTotalProgress()} />\n      </div>\n      <div className=\"todo-section\">\n        <h2>{activeSubject.title} To-Do List</h2>\n        <TodoList\n          todos={todoLists[activeSubject.id]}\n          onToggle={(index) => toggleTodo(activeSubject.id, index)} // Pass the index for the toggle\n          onAddTodo={addTodo} // Pass down the addTodo function\n          subjectId={activeSubject.id} // Pass down the subjectId\n        />\n        <h3>{activeSubject.title} Progress</h3>\n        <ProgressWheel progress={getSubjectProgress(activeSubject.id)} color={activeSubject.color} />\n      </div>\n      <div className=\"subject-cards-section\">\n        <h2>Select a Subject</h2>\n        <SubjectCards\n          subjects={subjects}\n          onSubjectSelect={setActiveSubject}\n          selectedSubject={activeSubject}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}