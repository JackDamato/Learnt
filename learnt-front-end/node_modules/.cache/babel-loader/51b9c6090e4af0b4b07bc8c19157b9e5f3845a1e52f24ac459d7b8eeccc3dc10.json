{"ast":null,"code":"var _jsxFileName = \"/workspaces/Learnt/learnt-front-end/src/components/SubmissionReviews.js\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useState } from 'react';\nimport { jsPDF } from 'jspdf';\nimport \"../styles/SubmissionReviews.css\";\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubmissionReviews = () => {\n  _s();\n  const [studyGuide, setStudyGuide] = useState('');\n  const [studyPlanner, setStudyPlanner] = useState('');\n  const [subject, setSubject] = useState('');\n  const [sessionNumber, setSessionNumber] = useState(1);\n  const [practiceQuestions, setPracticeQuestions] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        // Use the state passed from Form component\n        const {\n          state\n        } = window.history.state;\n        setStudyGuide(state.studyGuide);\n        setStudyPlanner(state.studyPlanner);\n        setSubject(state.formData.subject);\n      } catch (error) {\n        setError('No submission data available.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const generatePracticeQuestions = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/questions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_number: sessionNumber\n        }) // Send session number\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPracticeQuestions(data); // Set the received questions\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const saveToPDF = () => {\n    const doc = new jsPDF();\n    const margin = 10;\n    const pageWidth = doc.internal.pageSize.getWidth() - 2 * margin;\n    const titleYPosition = margin + 10;\n    const bodyStartY = titleYPosition + 10;\n    const lineSpacing = 6;\n    doc.setFontSize(18);\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(`Study Guide for ${subject}`, margin, titleYPosition);\n    doc.setFontSize(12);\n    doc.setFont(\"helvetica\", \"normal\");\n    const studyGuideLines = doc.splitTextToSize(studyGuide, pageWidth);\n    let currentY = bodyStartY;\n    studyGuideLines.forEach(line => {\n      if (currentY + lineSpacing > doc.internal.pageSize.height - margin) {\n        doc.addPage();\n        currentY = margin;\n      }\n      doc.text(line, margin, currentY);\n      currentY += lineSpacing;\n    });\n    doc.addPage();\n    doc.setFontSize(18);\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(`Study Plan:`, margin, titleYPosition);\n    doc.setFontSize(12);\n    doc.setFont(\"helvetica\", \"normal\");\n    const studyPlannerLines = doc.splitTextToSize(studyPlanner, pageWidth);\n    currentY = bodyStartY;\n    studyPlannerLines.forEach(line => {\n      if (currentY + lineSpacing > doc.internal.pageSize.height - margin) {\n        doc.addPage();\n        currentY = margin;\n      }\n      doc.text(line, margin, currentY);\n      currentY += lineSpacing;\n    });\n    doc.addPage();\n    doc.setFontSize(18);\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(`Practice Questions for Session ${sessionNumber}:`, margin, titleYPosition);\n    doc.setFontSize(12);\n    doc.setFont(\"helvetica\", \"normal\");\n    const questionLines = doc.splitTextToSize(practiceQuestions, pageWidth);\n    currentY = bodyStartY;\n    questionLines.forEach(line => {\n      if (currentY + lineSpacing > doc.internal.pageSize.height - margin) {\n        doc.addPage();\n        currentY = margin;\n      }\n      doc.text(line, margin, currentY);\n      currentY += lineSpacing;\n    });\n    doc.save(`${subject} Study Guide.pdf`);\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error fetching data: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-wrapper\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveToPDF,\n        className: \"submit-button\",\n        children: \"Download Study Guide as PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generatePracticeQuestions,\n        className: \"submit-button\",\n        children: \"Generate Practice Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), practiceQuestions && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Practice Questions for Session \", sessionNumber, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: practiceQuestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(SubmissionReviews, \"skrMS/obGEOEs/Hv3HxA0y1s6gM=\");\n_c = SubmissionReviews;\nexport default SubmissionReviews;\nvar _c;\n$RefreshReg$(_c, \"SubmissionReviews\");","map":{"version":3,"names":["React","useEffect","useState","jsPDF","Loading","jsxDEV","_jsxDEV","SubmissionReviews","_s","studyGuide","setStudyGuide","studyPlanner","setStudyPlanner","subject","setSubject","sessionNumber","setSessionNumber","practiceQuestions","setPracticeQuestions","loading","setLoading","error","setError","fetchData","state","window","history","formData","generatePracticeQuestions","response","fetch","method","headers","body","JSON","stringify","session_number","ok","Error","data","json","message","saveToPDF","doc","margin","pageWidth","internal","pageSize","getWidth","titleYPosition","bodyStartY","lineSpacing","setFontSize","setFont","text","studyGuideLines","splitTextToSize","currentY","forEach","line","height","addPage","studyPlannerLines","questionLines","save","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","display","justifyContent","onClick","_c","$RefreshReg$"],"sources":["/workspaces/Learnt/learnt-front-end/src/components/SubmissionReviews.js"],"sourcesContent":["import { React, useEffect, useState } from 'react';\nimport { jsPDF } from 'jspdf';\nimport \"../styles/SubmissionReviews.css\";\nimport Loading from './Loading';\n\nconst SubmissionReviews = () => {\n  const [studyGuide, setStudyGuide] = useState('');\n  const [studyPlanner, setStudyPlanner] = useState('');\n  const [subject, setSubject] = useState('');\n  const [sessionNumber, setSessionNumber] = useState(1);\n  const [practiceQuestions, setPracticeQuestions] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        // Use the state passed from Form component\n        const { state } = window.history.state;\n        setStudyGuide(state.studyGuide);\n        setStudyPlanner(state.studyPlanner);\n        setSubject(state.formData.subject);\n      } catch (error) {\n        setError('No submission data available.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const generatePracticeQuestions = async () => {\n    setLoading(true); \n    try {\n      const response = await fetch('/questions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ session_number: sessionNumber }), // Send session number\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      setPracticeQuestions(data); // Set the received questions\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const saveToPDF = () => {\n    const doc = new jsPDF();\n    const margin = 10; \n    const pageWidth = doc.internal.pageSize.getWidth() - 2 * margin; \n    const titleYPosition = margin + 10;\n    const bodyStartY = titleYPosition + 10;\n    const lineSpacing = 6; \n  \n    doc.setFontSize(18);\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(`Study Guide for ${subject}`, margin, titleYPosition);\n\n    doc.setFontSize(12);\n    doc.setFont(\"helvetica\", \"normal\");\n    \n    const studyGuideLines = doc.splitTextToSize(studyGuide, pageWidth);\n    let currentY = bodyStartY;\n  \n    studyGuideLines.forEach((line) => {\n      if (currentY + lineSpacing > doc.internal.pageSize.height - margin) {\n        doc.addPage();\n        currentY = margin;\n      }\n      doc.text(line, margin, currentY);\n      currentY += lineSpacing;\n    });\n  \n    doc.addPage();\n    doc.setFontSize(18);\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(`Study Plan:`, margin, titleYPosition);\n  \n    doc.setFontSize(12);\n    doc.setFont(\"helvetica\", \"normal\");\n    \n    const studyPlannerLines = doc.splitTextToSize(studyPlanner, pageWidth);\n    currentY = bodyStartY;\n  \n    studyPlannerLines.forEach((line) => {\n      if (currentY + lineSpacing > doc.internal.pageSize.height - margin) {\n        doc.addPage();\n        currentY = margin;\n      }\n      doc.text(line, margin, currentY);\n      currentY += lineSpacing; \n    });\n  \n    doc.addPage();\n    doc.setFontSize(18);\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(`Practice Questions for Session ${sessionNumber}:`, margin, titleYPosition);\n  \n    doc.setFontSize(12);\n    doc.setFont(\"helvetica\", \"normal\");\n    \n    const questionLines = doc.splitTextToSize(practiceQuestions, pageWidth);\n    currentY = bodyStartY;\n  \n    questionLines.forEach((line) => {\n      if (currentY + lineSpacing > doc.internal.pageSize.height - margin) {\n        doc.addPage();\n        currentY = margin;\n      }\n      doc.text(line, margin, currentY);\n      currentY += lineSpacing; \n    });\n  \n    doc.save(`${subject} Study Guide.pdf`);\n  };\n\n  if (error) {\n    return <p>Error fetching data: {error}</p>;\n  }\n\n  return (\n    <div>\n      {loading && <Loading />}\n      <div className=\"button-wrapper\" style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <button onClick={saveToPDF} className=\"submit-button\">Download Study Guide as PDF</button>\n        <button onClick={generatePracticeQuestions} className=\"submit-button\">Generate Practice Questions</button>\n      </div>\n      {practiceQuestions && (\n        <div>\n          <h3>Practice Questions for Session {sessionNumber}:</h3>\n          <p>{practiceQuestions}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SubmissionReviews;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}