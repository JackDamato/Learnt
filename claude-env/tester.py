string = "DISCRETE MATHEMATICS COMPREHENSIVE STUDY GUIDE\n\nTABLE OF CONTENTS:\n1. Proof by Contradiction\n2. Proof by Induction (Extended Section)\n3. Set Notation\n4. Set Operations\n5. Set Equivalence\n\n1. PROOF BY CONTRADICTION\nDefinition:\n- A method of proof where you assume the opposite of what you want to prove, show this leads to a contradiction, thus proving the original statement is true.\n\nKey Concepts:\n- Start by assuming the negation of the statement\n- Follow logical steps until reaching a contradiction\n- Conclude the original statement must be true\n\nCommon Exam Questions:\n- Prove that √2 is irrational\n- Prove there are infinitely many primes\n- Prove logical statements using contradiction\n\nExample:\nProve √2 is irrational\nSolution:\n1. Assume √2 is rational\n2. Then √2 = a/b where a,b are coprime integers\n3. 2 = a²/b²\n4. 2b² = a²\n5. a² is even, so a is even\n6. Let a = 2k\n7. 2b² = 4k²\n8. b² = 2k²\n9. b is even\n10. Contradiction: a,b can\\'t both be even if coprime\nTherefore, √2 is irrational\n\n2. PROOF BY INDUCTION (EXTENDED SECTION)\nDefinition:\n- A method to prove statements about all natural numbers by establishing a base case and showing the statement holds for n+1 if it holds for n.\n\nKey Components:\n1. Base Case: Prove true for initial value (usually n=1)\n2. Inductive Hypothesis: Assume true for k\n3. Inductive Step: Prove true for k+1\n\nTypes of Induction:\n- Weak Induction\n- Strong Induction\n- Structural Induction\n\nCommon Patterns:\n1. Summation formulas\n2. Divisibility properties\n3. Inequalities\n4. Geometric sequences\n\nDetailed Example:\nProve: 1 + 2 + 3 + ... + n = n(n+1)/2\n\nSolution:\n1. Base Case: n=1\n   Left side: 1\n   Right side: 1(1+1)/2 = 1 ✓\n\n2. Inductive Hypothesis:\n   Assume true for k: 1 + 2 + ... + k = k(k+1)/2\n\n3. Inductive Step:\n   Prove for k+1:\n   Left side: (1 + 2 + ... + k) + (k+1)\n   = k(k+1)/2 + (k+1)\n   = (k(k+1) + 2(k+1))/2\n   = (k² + 3k + 2)/2\n   = (k+1)(k+2)/2\n   = Right side for n=k+1 ✓\n\nPractice Problems:\n1. Prove: 2ⁿ > n² for n ≥ 4\n2. Prove: 1 + 3 + 5 + ... + (2n-1) = n²\n3. Prove: 3 divides 4ⁿ - 1 for all n ≥ 1\n\n3. SET NOTATION\nBasic Notation:\n- ∈ (element of)\n- ∉ (not element of)\n- ⊆ (subset)\n- ⊂ (proper subset)\n- {} (set notation)\n- |A| (cardinality)\n\nCommon Sets:\n- ℕ (natural numbers)\n- ℤ (integers)\n- ℚ (rational numbers)\n- ℝ (real numbers)\n\nSet Builder Notation:\n{x | P(x)} means \"the set of all x such that P(x) is true\"\n\n4. SET OPERATIONS\nBasic Operations:\n- Union (A ∪ B)\n- Intersection (A ∩ B)\n- Complement (A\\')\n- Difference (A - B)\n- Symmetric Difference (A △ B)\n\nLaws:\n- Commutative: A ∪ B = B ∪ A\n- Associative: (A ∪ B) ∪ C = A ∪ (B ∪ C)\n- Distributive: A ∪ (B ∩ C) = (A ∪ B) ∩ (A ∪ C)\n\nExample:\nIf A = {1,2,3}, B = {2,3,4}\nA ∪ B = {1,2,3,4}\nA ∩ B = {2,3}\nA - B = {1}\n\n5. SET EQUIVALENCE\nDefinition:\nTwo sets are equivalent if they have the same elements.\n\nMethods to Prove Equivalence:\n1. Double inclusion (A ⊆ B and B ⊆ A)\n2. Element-chasing\n3. Venn diagrams\n\nCommon Equivalences:\n- De Morgan\\'s Laws:\n  (A ∪ B)\\' = A\\' ∩ B\\'\n  (A ∩ B)\\' = A\\' ∪ B\\'\n\nExample:\nProve: A - (B ∪ C) = (A - B) ∩ (A - C)\nSolution:\nx ∈ A - (B ∪ C)\n⟺ x ∈ A and x ∉ (B ∪ C)\n⟺ x ∈ A and (x ∉ B and x ∉ C)\n⟺ (x ∈ A and x ∉ B) and (x ∈ A and x ∉ C)\n⟺ x ∈ (A - B) ∩ (A - C)\n\nStudy Tips:\n1. Practice many problems\n2. Draw Venn diagrams\n3. Write out steps clearly\n4. Focus on proof techniques\n5. Memorize common identities"
   
new = string.replace("\\n","\n")

print(new)